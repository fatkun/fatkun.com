<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Thinking in Java 读书笔记 on Fatkun&#39;s Blog</title>
    <link>http://fatkun.github.io/tags/thinking-in-java-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link>
    <description>Recent content in Thinking in Java 读书笔记 on Fatkun&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 30 Jul 2010 09:00:55 +0000</lastBuildDate>
    
	<atom:link href="http://fatkun.github.io/tags/thinking-in-java-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java的访问控制</title>
      <link>http://fatkun.github.io/2010/07/java-access.html</link>
      <pubDate>Fri, 30 Jul 2010 09:00:55 +0000</pubDate>
      
      <guid>http://fatkun.github.io/2010/07/java-access.html</guid>
      <description>&lt;h2 id=&#34;包package&#34;&gt;包（Package）&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;创建自己的包时，要求 package语句必须是文件中的第一个“非注释”代码。&lt;/li&gt;
&lt;li&gt;如果类名冲突时，可这样写java.util.Vector v = new java.util.Vector();&lt;/li&gt;
&lt;li&gt;可能（但并常见）有一个编译单元根本没有任何公共类。此时，可按自己的意愿任意指定文件名。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;访问控制&#34;&gt;访问控制&lt;/h2&gt;
&lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34; width=&#34;584&#34;&gt;  &lt;tr&gt;    &lt;td width=&#34;105&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        &lt;strong&gt;修饰符&lt;/strong&gt;      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;139&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        &lt;strong&gt;类内部&lt;/strong&gt;      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;87&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        &lt;strong&gt;同一个包&lt;/strong&gt;      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;104&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        &lt;strong&gt;子类&lt;/strong&gt;      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;149&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        &lt;strong&gt;任何地方&lt;/strong&gt;      &lt;/p&gt;    &lt;/td&gt;  &lt;/tr&gt;
  &lt;tr&gt;    &lt;td width=&#34;105&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        private      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;139&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;87&#34;&gt;    &lt;/td&gt;
    &lt;td width=&#34;104&#34;&gt;    &lt;/td&gt;
    &lt;td width=&#34;149&#34;&gt;    &lt;/td&gt;  &lt;/tr&gt;
  &lt;tr&gt;    &lt;td width=&#34;105&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        default      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;139&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;87&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;104&#34;&gt;    &lt;/td&gt;
    &lt;td width=&#34;149&#34;&gt;    &lt;/td&gt;  &lt;/tr&gt;
  &lt;tr&gt;    &lt;td width=&#34;105&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        protected      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;139&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;87&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;104&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;149&#34;&gt;    &lt;/td&gt;  &lt;/tr&gt;
  &lt;tr&gt;    &lt;td width=&#34;105&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        public      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;139&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;87&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;104&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;149&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;  &lt;/tr&gt;&lt;/table&gt;
类的修饰符只有public 和 default，默认时只能被同一个文件或包内访问。</description>
    </item>
    
    <item>
      <title>Java运算符优先级(表格)</title>
      <link>http://fatkun.github.io/2010/07/java-operator-priority.html</link>
      <pubDate>Wed, 28 Jul 2010 14:45:18 +0000</pubDate>
      
      <guid>http://fatkun.github.io/2010/07/java-operator-priority.html</guid>
      <description>Java运算符优先级参考图表 本文来源 http://blog.csdn.net/xiaoli_feng/archive/2009/09/18/4567184.aspx 优先级 运算符 结合性 1 () [] . 从左到右 2 ! +(正) -(负) ~ ++ &amp;#8212; 从右向左 3 * / % 从左向右 4 +(加) -(减)</description>
    </item>
    
    <item>
      <title>Java的重载(Overload)与重写(Override)</title>
      <link>http://fatkun.github.io/2010/07/java-overload-and-overrid.html</link>
      <pubDate>Wed, 28 Jul 2010 14:10:25 +0000</pubDate>
      
      <guid>http://fatkun.github.io/2010/07/java-overload-and-overrid.html</guid>
      <description>重载与重写之间的差别 区别点 重载方法 重写方法 参数列表 必须修改 一定不能修改 返回类型 可以修改 一定不能修改 异常 可以修改 可以减少或删除，一定不能抛出新</description>
    </item>
    
    <item>
      <title>Java数据类型转换</title>
      <link>http://fatkun.github.io/2010/07/data-type-conversion.html</link>
      <pubDate>Wed, 28 Jul 2010 13:39:04 +0000</pubDate>
      
      <guid>http://fatkun.github.io/2010/07/data-type-conversion.html</guid>
      <description>1.在Java中看到象“1.39e-47f”这样的表达式时，它真正的含义是“1.39×10 的-47次方”。 2.注意如果编译器能够正确地识别类</description>
    </item>
    
    <item>
      <title>Java的运算符号（逻辑与、或、非、移位运算）</title>
      <link>http://fatkun.github.io/2010/07/java-operator.html</link>
      <pubDate>Wed, 28 Jul 2010 03:45:53 +0000</pubDate>
      
      <guid>http://fatkun.github.io/2010/07/java-operator.html</guid>
      <description>1.只可将AND，OR 或NOT 应用于布尔值。与在C 及C++中不同，不可将一个非布尔值当作布尔值在逻辑表达式中使用。 2.在AND（&amp;amp;&amp;</description>
    </item>
    
  </channel>
</rss>