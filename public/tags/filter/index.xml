<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>filter on Fatkun&#39;s Blog</title>
    <link>http://fatkun.github.io/tags/filter/</link>
    <description>Recent content in filter on Fatkun&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 25 Mar 2013 17:43:05 +0000</lastBuildDate>
    
	<atom:link href="http://fatkun.github.io/tags/filter/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hbase DependentColumnFilter</title>
      <link>http://fatkun.github.io/2013/03/hbase-dependentcolumnfilter.html</link>
      <pubDate>Mon, 25 Mar 2013 17:43:05 +0000</pubDate>
      
      <guid>http://fatkun.github.io/2013/03/hbase-dependentcolumnfilter.html</guid>
      <description>Here you have a more complex filter that does not simply filter out data based on directly available information. Rather, it lets you specify a dependent column—or reference column—that controls how other columns are filtered. It uses the timestamp of the reference column and includes all other columns that have the same</description>
    </item>
    
    <item>
      <title>Hbase ValueFilter</title>
      <link>http://fatkun.github.io/2013/03/hbase-valuefilter.html</link>
      <pubDate>Mon, 25 Mar 2013 16:52:03 +0000</pubDate>
      
      <guid>http://fatkun.github.io/2013/03/hbase-valuefilter.html</guid>
      <description>Hbase ValueFilter用于过滤值 package com.fatkun.filter.comparison; import java.io.IOException; import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.hbase.HBaseConfiguration; import org.apache.hadoop.hbase.HColumnDescriptor; import org.apache.hadoop.hbase.HTableDescriptor; import org.apache.hadoop.hbase.client.Get; import org.apache.hadoop.hbase.client.HBaseAdmin; import org.apache.hadoop.hbase.client.HTable; import org.apache.hadoop.hbase.client.Put; import org.apache.hadoop.hbase.client.Result; import org.apache.hadoop.hbase.client.ResultScanner; import org.apache.hadoop.hbase.client.Scan; import org.apache.hadoop.hbase.filter.BinaryComparator; import org.apache.hadoop.hbase.filter.CompareFilter; import org.apache.hadoop.hbase.filter.Filter; import org.apache.hadoop.hbase.filter.SubstringComparator; import org.apache.hadoop.hbase.filter.ValueFilter; import org.apache.hadoop.hbase.util.Bytes; public class TestHbaseValueFilter { String tableName = &#34;test_value_filter&#34;; Configuration config = HBaseConfiguration.create(); /** * 部</description>
    </item>
    
    <item>
      <title>Hbase QualifierFilter</title>
      <link>http://fatkun.github.io/2013/03/hbase-qualifierfilter.html</link>
      <pubDate>Mon, 25 Mar 2013 16:40:53 +0000</pubDate>
      
      <guid>http://fatkun.github.io/2013/03/hbase-qualifierfilter.html</guid>
      <description>Hbase QualifierFilter用于过滤qualifier，也就是一个列族里面data:xxx，冒号后面的字符串。 =。= package com.fatkun.filter.comparison; import java.io.IOException; import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.hbase.HBaseConfiguration; import org.apache.hadoop.hbase.HColumnDescriptor;</description>
    </item>
    
    <item>
      <title>Hbase FamilyFilter</title>
      <link>http://fatkun.github.io/2013/03/hbase-familyfilter.html</link>
      <pubDate>Sun, 24 Mar 2013 17:01:05 +0000</pubDate>
      
      <guid>http://fatkun.github.io/2013/03/hbase-familyfilter.html</guid>
      <description>FamilyFilter 用于过滤Family package com.fatkun.filter; import java.io.IOException; import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.hbase.HBaseConfiguration; import org.apache.hadoop.hbase.HColumnDescriptor; import org.apache.hadoop.hbase.HTableDescriptor; import org.apache.hadoop.hbase.client.Get; import org.apache.hadoop.hbase.client.HBaseAdmin; import org.apache.hadoop.hbase.client.HTable; import org.apache.hadoop.hbase.client.Put; import org.apache.hadoop.hbase.client.Result; import org.apache.hadoop.hbase.client.ResultScanner; import org.apache.hadoop.hbase.client.Scan; import org.apache.hadoop.hbase.filter.BinaryComparator; import org.apache.hadoop.hbase.filter.CompareFilter; import org.apache.hadoop.hbase.filter.FamilyFilter; import org.apache.hadoop.hbase.filter.Filter; import org.apache.hadoop.hbase.util.Bytes; public class TestHbaseFamilyFilter { String tableName = &#34;test_family_filter&#34;; Configuration config = HBaseConfiguration.create(); /** * 部分代码来自hba</description>
    </item>
    
    <item>
      <title>hbase RowFilter</title>
      <link>http://fatkun.github.io/2013/03/hbase-rowfilter.html</link>
      <pubDate>Sun, 24 Mar 2013 13:58:40 +0000</pubDate>
      
      <guid>http://fatkun.github.io/2013/03/hbase-rowfilter.html</guid>
      <description>RowFilter用于过滤row key Operator Description LESS 小于 LESS_OR_EQUAL 小于等于 EQUAL 等于 NOT_EQUAL 不等于 GREATER_OR_EQUAL 大于等于 GREATER 大于 NO_OP 排除所有 &amp;nbsp; Comparator Description BinaryComparator 使用Bytes.compareTo()</description>
    </item>
    
  </channel>
</rss>