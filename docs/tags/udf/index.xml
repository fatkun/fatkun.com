<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>udf on Fatkun&#39;s Blog</title>
    <link>https://fatkun.github.io/tags/udf/</link>
    <description>Recent content in udf on Fatkun&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 22 Dec 2013 15:07:35 +0000</lastBuildDate>
    
	<atom:link href="https://fatkun.github.io/tags/udf/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>动态注册hive udf</title>
      <link>https://fatkun.github.io/2013/12/register-udf.html</link>
      <pubDate>Sun, 22 Dec 2013 15:07:35 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2013/12/register-udf.html</guid>
      <description>&lt;h2 id=&#34;目标&#34;&gt;目标&lt;/h2&gt;
&lt;p&gt;可以不重启hive服务端动态增加或更新udf，本文用到动态加载以及hive hook实现。&lt;/p&gt;
&lt;h2 id=&#34;看看原来的代码是怎样写的&#34;&gt;看看原来的代码是怎样写的&lt;/h2&gt;
&lt;p&gt;我看的是cdh4.3.0代码，目前有两个地方注册udf，
一个是在org.apache.hadoop.hive.ql.exec.FunctionRegistry类里，大部分的内置udf都是在这里注册的，很多网站都是通过修改这里代码重新打包来注册udf。
第二个是最近新增了一个hive-builtins*.jar文件，注册函数是在&lt;/p&gt;
&lt;pre lang=&#34;java&#34; escaped=&#34;true&#34;&gt;public SessionState(HiveConf conf) {
...
      Class&amp;lt;?&amp;gt; pluginClass = Utilities.getBuiltinUtilsClass();
      URL jarLocation = pluginClass.getProtectionDomain().getCodeSource().getLocation();
      add_builtin_resource(ResourceType.JAR, jarLocation.toString());
      FunctionRegistry.registerFunctionsFromPluginJar(jarLocation, pluginClass.getClassLoader());
...
  }&lt;/pre&gt;
&lt;p&gt;通过找到org.apache.hive.builtins.BuiltinUtils类定位jar的位置，把jar包加入hive.added.jars.path配置里，然后通过FunctionRegistry.registerFunctionsFromPluginJar来注册udf&lt;/p&gt;
&lt;pre lang=&#34;java&#34; escaped=&#34;true&#34;&gt;//我们可以用这两个方法来注册udf
public static void registerTemporaryUDF(String functionName, Class&amp;lt;? extends UDF&amp;gt; UDFClass, boolean isOperator)
public static void registerFunctionsFromPluginJar(URL jarLocation, ClassLoader classLoader)&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>