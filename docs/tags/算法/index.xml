<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on Fatkun&#39;s Blog</title>
    <link>https://fatkun.github.io/tags/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on Fatkun&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 04 Dec 2010 15:24:59 +0000</lastBuildDate>
    
	<atom:link href="https://fatkun.github.io/tags/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>选择排序算法(JAVA版)</title>
      <link>https://fatkun.github.io/2010/12/select-sort-java.html</link>
      <pubDate>Sat, 04 Dec 2010 15:24:59 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/12/select-sort-java.html</guid>
      <description>选择排序和插入排序差不多，交换的次数减少。平均/最好/最坏时间复杂度是O(n2)，是不稳定的排序算法。（插入排序是稳定排序算法） update</description>
    </item>
    
    <item>
      <title>快速排序算法(JAVA版)</title>
      <link>https://fatkun.github.io/2010/12/quick-sort-java.html</link>
      <pubDate>Sat, 04 Dec 2010 02:57:47 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/12/quick-sort-java.html</guid>
      <description>快速排序是不稳定的排序方法，平均时间复杂度为O(nlogn)，空间复杂度为O(logn)，最差时是有序或基本有序时，算法退化为冒泡排序，时间</description>
    </item>
    
    <item>
      <title>冒泡排序算法(JAVA)</title>
      <link>https://fatkun.github.io/2010/12/bubble-sort.html</link>
      <pubDate>Fri, 03 Dec 2010 16:00:18 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/12/bubble-sort.html</guid>
      <description>冒泡排序：和每一个比较，如果比后面大则交换，最终每一趟结果是最大值会沉到后面。 时间复杂度O(n2)，最佳情况是已排好序只比较n-1次，不用交</description>
    </item>
    
    <item>
      <title>直接插入排序算法（JAVA版）</title>
      <link>https://fatkun.github.io/2010/12/insert-sort.html</link>
      <pubDate>Fri, 03 Dec 2010 02:23:31 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/12/insert-sort.html</guid>
      <description>时间复杂度：O(n*n) 直接插入排序：遍历第二个到最后一个，找到每一个值的最佳位置，插进去：） 1.a[i]和前一个值a[i-1]比较，如果小</description>
    </item>
    
  </channel>
</rss>