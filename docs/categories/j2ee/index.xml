<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>J2EE on Fatkun&#39;s Blog</title>
    <link>https://fatkun.github.io/categories/j2ee/</link>
    <description>Recent content in J2EE on Fatkun&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 10 Sep 2017 06:59:38 +0000</lastBuildDate>
    
	<atom:link href="https://fatkun.github.io/categories/j2ee/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>java数据库事务写的不错的一篇文章</title>
      <link>https://fatkun.github.io/2017/09/java%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1%E5%86%99%E7%9A%84%E4%B8%8D%E9%94%99%E7%9A%84%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0.html</link>
      <pubDate>Sun, 10 Sep 2017 06:59:38 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2017/09/java%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1%E5%86%99%E7%9A%84%E4%B8%8D%E9%94%99%E7%9A%84%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0.html</guid>
      <description>Java事务之一——Java事务的基本问题</description>
    </item>
    
    <item>
      <title>JDK Native Memory Tracking</title>
      <link>https://fatkun.github.io/2017/06/jdk-native-memory-tracking.html</link>
      <pubDate>Mon, 12 Jun 2017 07:42:07 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2017/06/jdk-native-memory-tracking.html</guid>
      <description>command line option: -XX:NativeMemoryTracking=summary or -XX:NativeMemoryTracking=detail jcmd ${PID} VM.native_memory summary https://docs.oracle.com/javase/8/docs/technotes/guides/troubleshoot/tooldescr007.html</description>
    </item>
    
    <item>
      <title>使用powermock</title>
      <link>https://fatkun.github.io/2016/08/powermock.html</link>
      <pubDate>Wed, 17 Aug 2016 06:10:27 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2016/08/powermock.html</guid>
      <description>在pom.xml加入 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.easymock&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;easymock&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.3.1&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.powermock&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;powermock-module-junit4&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.6.5&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.powermock&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;powermock-api-easymock&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.6.5&amp;lt;/version&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; 如果报错，有可能项目中包含有低版本的javassist java.lang.NoSuchMethodError: javassist.CtMethod.hasAnnotation(Ljava/lang/Class;)Z 尝试加入新版本的javas</description>
    </item>
    
    <item>
      <title>[备忘]使用log4j</title>
      <link>https://fatkun.github.io/2013/11/use-log4j.html</link>
      <pubDate>Sun, 17 Nov 2013 08:01:11 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2013/11/use-log4j.html</guid>
      <description>加载配置的方法 方法1： 把配置改名为log4j.properties，放在src目录下，打包成jar的时候，它就在jar的根目录下了。 方法2：</description>
    </item>
    
    <item>
      <title>[备忘]java指定一个目录加入classpath</title>
      <link>https://fatkun.github.io/2013/04/java-dir-classpath.html</link>
      <pubDate>Mon, 22 Apr 2013 02:08:15 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2013/04/java-dir-classpath.html</guid>
      <description>java -classpath test.jar -Djava.ext.dirs=./lib com.fatkun.Test</description>
    </item>
    
    <item>
      <title>java反射引起的java.lang.OutOfMemoryError: PermGen space</title>
      <link>https://fatkun.github.io/2013/04/java-reflection-outofmemoryerror.html</link>
      <pubDate>Sun, 21 Apr 2013 13:50:58 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2013/04/java-reflection-outofmemoryerror.html</guid>
      <description>由于之前为了不改hive的代码，用了反射的方式动态修改，导致了另一个问题出现。 我用的反射代码如下：（代码是针对local metastore写</description>
    </item>
    
    <item>
      <title>JAVA反射(Reflect)的使用</title>
      <link>https://fatkun.github.io/2012/10/java-reflect.html</link>
      <pubDate>Sun, 07 Oct 2012 15:59:52 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2012/10/java-reflect.html</guid>
      <description>反射方法Method getDeclaredMethod是获取该类声明的方法，不包括继承的。 Method getDeclaredMethod(String name, Class… parameterTypes) 返回一个 Method 对象，该对象反映此 Class</description>
    </item>
    
    <item>
      <title>eclipse上单步调试Hive</title>
      <link>https://fatkun.github.io/2012/04/eclipse-debug-hive.html</link>
      <pubDate>Sat, 14 Apr 2012 10:06:16 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2012/04/eclipse-debug-hive.html</guid>
      <description>在百度找到这篇文章：在Windows eclipse上单步调试Hive教程 可是我死活搞不定在windows安装hadoop和hive，cgyw</description>
    </item>
    
    <item>
      <title>Hive为什么会创建DELETEME表</title>
      <link>https://fatkun.github.io/2012/04/hive-deleteme-table.html</link>
      <pubDate>Tue, 10 Apr 2012 16:16:45 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2012/04/hive-deleteme-table.html</guid>
      <description>在Hive中会去取schme name和catalog（暂时不知道这个东西有什么用） 是第三方的库datanucleus在操作， 可以看到它创建D</description>
    </item>
    
    <item>
      <title>Hive MetaStore建表与修改表分析</title>
      <link>https://fatkun.github.io/2012/04/hive-metastore-create-table-and-alter-table.html</link>
      <pubDate>Tue, 10 Apr 2012 15:57:54 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2012/04/hive-metastore-create-table-and-alter-table.html</guid>
      <description>问题 使用Hive MetaStore（这里指的是通过thrift连接hiveserver） Create table 和 Alter table的时候遇到一个问题 建表时指定的lo</description>
    </item>
    
    <item>
      <title>org.hibernate.NonUniqueObjectException的原因与解决方法</title>
      <link>https://fatkun.github.io/2011/04/org-hibernate-nonuniqueobjectexception.html</link>
      <pubDate>Fri, 01 Apr 2011 09:42:12 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2011/04/org-hibernate-nonuniqueobjectexception.html</guid>
      <description>使用hibernate更新对象时，出现如下错误： org.hibernate.NonUniqueObjectException: a different object with the same identifier value was already associated with the session:[com.fatkun.dao.hibernate.User#12] 原因 在同一个session内，如果已经有一个对象已经是持久化状</description>
    </item>
    
    <item>
      <title>JDK源码分析：java.lang.String</title>
      <link>https://fatkun.github.io/2011/03/jdk-source-java-lang-string.html</link>
      <pubDate>Thu, 10 Mar 2011 15:24:57 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2011/03/jdk-source-java-lang-string.html</guid>
      <description>最近开始看JDK源码，不能太懒了注释非常详细（虽然是英文），而且部分代码也不算很复杂。先挑的简单的看看。。为了坚持下去，所以在博客写些记录，</description>
    </item>
    
    <item>
      <title>SQL Server JDBC Driver 2.0编译失败</title>
      <link>https://fatkun.github.io/2011/01/sql-server-jdbc-driver-2-0%E7%BC%96%E8%AF%91%E5%A4%B1%E8%B4%A5.html</link>
      <pubDate>Thu, 27 Jan 2011 04:46:59 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2011/01/sql-server-jdbc-driver-2-0%E7%BC%96%E8%AF%91%E5%A4%B1%E8%B4%A5.html</guid>
      <description>Exception in thread &#34;main&#34; java.lang.UnsupportedClassVersionError: Bad version number in .class file 这个错误是因为JDK的版本不对，请检查你的JDK版本。然后检查你的包是不是都用低版本JDK编译的。 如果你在使用JDK1</description>
    </item>
    
    <item>
      <title>JFreeChart核心类库介绍</title>
      <link>https://fatkun.github.io/2010/12/jfreechart%E6%A0%B8%E5%BF%83%E7%B1%BB%E5%BA%93.html</link>
      <pubDate>Fri, 31 Dec 2010 05:54:44 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/12/jfreechart%E6%A0%B8%E5%BF%83%E7%B1%BB%E5%BA%93.html</guid>
      <description>&lt;p&gt;以下内容包括了如何调整XY轴数值间隔
原文来自：&lt;a href=&#34;http://hi.baidu.com/baileyfu/blog/item/8e75b212b47fea54f819b808.html&#34;&gt;http://hi.baidu.com/baileyfu/blog/item/8e75b212b47fea54f819b808.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JFreeChart使用方法(代码备忘)</title>
      <link>https://fatkun.github.io/2010/12/jfreechart.html</link>
      <pubDate>Fri, 31 Dec 2010 05:50:31 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/12/jfreechart.html</guid>
      <description>&lt;p&gt;以下文章介绍JFreeChart的使用方法。&lt;br&gt;
文章来源：http://hi.baidu.com/baileyfu/blog/item/8e75b212b47fea54f819b808.html&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hibernate事务管理</title>
      <link>https://fatkun.github.io/2010/12/hibernate-transaction.html</link>
      <pubDate>Sat, 25 Dec 2010 10:16:03 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/12/hibernate-transaction.html</guid>
      <description>1. 介绍数据库事务、事务隔离级别、悲观锁、乐观锁等概念。 2.数据库ACID特征： Atomic（原子性）：指整个数据库事务是不可分割的工作单元。</description>
    </item>
    
    <item>
      <title>List中的remove使用注意</title>
      <link>https://fatkun.github.io/2010/12/list-remove.html</link>
      <pubDate>Tue, 21 Dec 2010 05:09:50 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/12/list-remove.html</guid>
      <description>先来看API是怎样写的。 boolean remove(Object o) 从此列表中移除第一次出现的指定元素（如果存在）（可选操作）。如果列表不包含元素，则不更改列表。更确切地讲，移除</description>
    </item>
    
    <item>
      <title>选择排序算法(JAVA版)</title>
      <link>https://fatkun.github.io/2010/12/select-sort-java.html</link>
      <pubDate>Sat, 04 Dec 2010 15:24:59 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/12/select-sort-java.html</guid>
      <description>选择排序和插入排序差不多，交换的次数减少。平均/最好/最坏时间复杂度是O(n2)，是不稳定的排序算法。（插入排序是稳定排序算法） update</description>
    </item>
    
    <item>
      <title>快速排序算法(JAVA版)</title>
      <link>https://fatkun.github.io/2010/12/quick-sort-java.html</link>
      <pubDate>Sat, 04 Dec 2010 02:57:47 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/12/quick-sort-java.html</guid>
      <description>快速排序是不稳定的排序方法，平均时间复杂度为O(nlogn)，空间复杂度为O(logn)，最差时是有序或基本有序时，算法退化为冒泡排序，时间</description>
    </item>
    
    <item>
      <title>冒泡排序算法(JAVA)</title>
      <link>https://fatkun.github.io/2010/12/bubble-sort.html</link>
      <pubDate>Fri, 03 Dec 2010 16:00:18 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/12/bubble-sort.html</guid>
      <description>冒泡排序：和每一个比较，如果比后面大则交换，最终每一趟结果是最大值会沉到后面。 时间复杂度O(n2)，最佳情况是已排好序只比较n-1次，不用交</description>
    </item>
    
    <item>
      <title>直接插入排序算法（JAVA版）</title>
      <link>https://fatkun.github.io/2010/12/insert-sort.html</link>
      <pubDate>Fri, 03 Dec 2010 02:23:31 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/12/insert-sort.html</guid>
      <description>时间复杂度：O(n*n) 直接插入排序：遍历第二个到最后一个，找到每一个值的最佳位置，插进去：） 1.a[i]和前一个值a[i-1]比较，如果小</description>
    </item>
    
    <item>
      <title>try finally中return的执行顺序</title>
      <link>https://fatkun.github.io/2010/11/try-catch-finally-return.html</link>
      <pubDate>Fri, 26 Nov 2010 14:25:40 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/11/try-catch-finally-return.html</guid>
      <description>看代码吧，容易懂点。 public class Try { public static void main(String[] args) { System.out.println(&#34;最终结果:&#34; + aa()); } public static int aa() { int a = 1; try { System.out.println(&#34;try:&#34; + a); throw new Exception(); //return a; } catch</description>
    </item>
    
    <item>
      <title>JAVA的==与Equals</title>
      <link>https://fatkun.github.io/2010/11/java-equals.html</link>
      <pubDate>Sun, 21 Nov 2010 03:38:21 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/11/java-equals.html</guid>
      <description>以下是我的理解，可能有误 Java中的“==”用来判断是否是同一个对象（对象的引用是不是一样），equals方法一般会被覆盖，主要是比较值，而</description>
    </item>
    
    <item>
      <title>EL表达式</title>
      <link>https://fatkun.github.io/2010/11/el-expression.html</link>
      <pubDate>Fri, 19 Nov 2010 15:14:26 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/11/el-expression.html</guid>
      <description>期待已久的日子即将到来: 最新版JavaServer Pages (JSP)2.0 规范即将和其他的J2EE 1.4一同发布。新的JSP版本有一个新的飞跃，采用了新的方式：</description>
    </item>
    
    <item>
      <title>FreeMarker简单入门</title>
      <link>https://fatkun.github.io/2010/11/freemarker-getting-start.html</link>
      <pubDate>Tue, 09 Nov 2010 16:48:30 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/11/freemarker-getting-start.html</guid>
      <description>freemarker是用来根据模板生成代码的，有强大的模板语言。 项目地址：http://freemarker.sourceforge.net</description>
    </item>
    
    <item>
      <title>Comparator和Comparable的区别使用</title>
      <link>https://fatkun.github.io/2010/11/comparator-and-comparable.html</link>
      <pubDate>Sat, 06 Nov 2010 15:47:58 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/11/comparator-and-comparable.html</guid>
      <description>Camparable与Comparator的区别 简单说： 实现Camparable接口可以直接使用sort方法Collections.sort</description>
    </item>
    
    <item>
      <title>Mercurial(HG)版本控制服务用户名验证</title>
      <link>https://fatkun.github.io/2010/10/mercurial-authentication.html</link>
      <pubDate>Sun, 17 Oct 2010 03:22:18 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/10/mercurial-authentication.html</guid>
      <description>在之前的文章中，在Windows使用apache搭建Mercurial版本控制服务，并没有说到如何验证用户，而是允许所有人都提交。当时还不会</description>
    </item>
    
    <item>
      <title>删除Lucene索引</title>
      <link>https://fatkun.github.io/2010/10/delete-lucene-index.html</link>
      <pubDate>Sat, 09 Oct 2010 08:35:19 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/10/delete-lucene-index.html</guid>
      <description>若需要从索引中删除某一个或者某一类文档，IndexReader提供了两种方法： reader.DeleteDocument(int docNum) reader.DeleteDocuments(Term term)。 前者是根据文档的编号来删除该文档，docNu</description>
    </item>
    
    <item>
      <title>用一个Tomcat建立多个Server</title>
      <link>https://fatkun.github.io/2010/09/tomcat-with-multiple-server.html</link>
      <pubDate>Thu, 16 Sep 2010 12:41:37 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/09/tomcat-with-multiple-server.html</guid>
      <description>1.通过配置多个元素（不同目录） (fatkun:这个和直接放在webapps不用配置差不多) 在下配置多个元素 &amp;lt;Context path=&#34;app1&#34; docBase=&#34;E:/workspace/app1/WebRoot&#34; debug=&#34;0&#34; reloadable=&#34;true&#34;&amp;gt;&amp;lt;/Context&amp;gt; &amp;lt;Context path=&#34;app2&#34; docBase=&#34;E:/workspace/app2/WebRoot&#34; debug=&#34;0&#34; reloadable=&#34;true&#34;&amp;gt;&amp;lt;/Context&amp;gt; 然后通过 主机</description>
    </item>
    
    <item>
      <title>Hibernate状态transient、persistent、detached的转换</title>
      <link>https://fatkun.github.io/2010/09/transient-persistent-detached.html</link>
      <pubDate>Wed, 15 Sep 2010 13:48:25 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/09/transient-persistent-detached.html</guid>
      <description>transient、persistent、detached状态关系图如下： 1、transient状态的特征： 在数据库中没有与之匹配的数据 没有</description>
    </item>
    
    <item>
      <title>XDoclet – discriminator标签（子类，同一个表）</title>
      <link>https://fatkun.github.io/2010/09/xdoclet-discriminator.html</link>
      <pubDate>Mon, 13 Sep 2010 12:11:29 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/09/xdoclet-discriminator.html</guid>
      <description>使用XDoclet生成子类映射配置， 简单说一下，只当自己记录了。 这是一个“每棵继承树映射成一张表”的方法，也就是在这个表里加一个字段来区分子</description>
    </item>
    
    <item>
      <title>在MyEclipse Tomcat配置JNDI(mysql)</title>
      <link>https://fatkun.github.io/2010/09/myeclipse-tomcat-jndi.html</link>
      <pubDate>Sun, 05 Sep 2010 14:16:36 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/09/myeclipse-tomcat-jndi.html</guid>
      <description>在&amp;lt;workspace目录&amp;gt;.metadata.me_tcat\conf目录下找到context.xml文件 加入以下内容，按照需</description>
    </item>
    
    <item>
      <title>Java的访问控制</title>
      <link>https://fatkun.github.io/2010/07/java-access.html</link>
      <pubDate>Fri, 30 Jul 2010 09:00:55 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/07/java-access.html</guid>
      <description>&lt;h2 id=&#34;包package&#34;&gt;包（Package）&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;创建自己的包时，要求 package语句必须是文件中的第一个“非注释”代码。&lt;/li&gt;
&lt;li&gt;如果类名冲突时，可这样写java.util.Vector v = new java.util.Vector();&lt;/li&gt;
&lt;li&gt;可能（但并常见）有一个编译单元根本没有任何公共类。此时，可按自己的意愿任意指定文件名。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;访问控制&#34;&gt;访问控制&lt;/h2&gt;
&lt;table border=&#34;0&#34; cellspacing=&#34;0&#34; cellpadding=&#34;0&#34; width=&#34;584&#34;&gt;  &lt;tr&gt;    &lt;td width=&#34;105&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        &lt;strong&gt;修饰符&lt;/strong&gt;      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;139&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        &lt;strong&gt;类内部&lt;/strong&gt;      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;87&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        &lt;strong&gt;同一个包&lt;/strong&gt;      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;104&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        &lt;strong&gt;子类&lt;/strong&gt;      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;149&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        &lt;strong&gt;任何地方&lt;/strong&gt;      &lt;/p&gt;    &lt;/td&gt;  &lt;/tr&gt;
  &lt;tr&gt;    &lt;td width=&#34;105&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        private      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;139&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;87&#34;&gt;    &lt;/td&gt;
    &lt;td width=&#34;104&#34;&gt;    &lt;/td&gt;
    &lt;td width=&#34;149&#34;&gt;    &lt;/td&gt;  &lt;/tr&gt;
  &lt;tr&gt;    &lt;td width=&#34;105&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        default      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;139&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;87&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;104&#34;&gt;    &lt;/td&gt;
    &lt;td width=&#34;149&#34;&gt;    &lt;/td&gt;  &lt;/tr&gt;
  &lt;tr&gt;    &lt;td width=&#34;105&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        protected      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;139&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;87&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;104&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;149&#34;&gt;    &lt;/td&gt;  &lt;/tr&gt;
  &lt;tr&gt;    &lt;td width=&#34;105&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        public      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;139&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;87&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;104&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;
    &lt;td width=&#34;149&#34;&gt;      &lt;p align=&#34;center&#34;&gt;        √      &lt;/p&gt;    &lt;/td&gt;  &lt;/tr&gt;&lt;/table&gt;
类的修饰符只有public 和 default，默认时只能被同一个文件或包内访问。</description>
    </item>
    
    <item>
      <title>Java运算符优先级(表格)</title>
      <link>https://fatkun.github.io/2010/07/java-operator-priority.html</link>
      <pubDate>Wed, 28 Jul 2010 14:45:18 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/07/java-operator-priority.html</guid>
      <description>Java运算符优先级参考图表 本文来源 http://blog.csdn.net/xiaoli_feng/archive/2009/09/18/4567184.aspx 优先级 运算符 结合性 1 () [] . 从左到右 2 ! +(正) -(负) ~ ++ &amp;#8212; 从右向左 3 * / % 从左向右 4 +(加) -(减)</description>
    </item>
    
    <item>
      <title>Java数据类型转换</title>
      <link>https://fatkun.github.io/2010/07/data-type-conversion.html</link>
      <pubDate>Wed, 28 Jul 2010 13:39:04 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/07/data-type-conversion.html</guid>
      <description>1.在Java中看到象“1.39e-47f”这样的表达式时，它真正的含义是“1.39×10 的-47次方”。 2.注意如果编译器能够正确地识别类</description>
    </item>
    
    <item>
      <title>Java的运算符号（逻辑与、或、非、移位运算）</title>
      <link>https://fatkun.github.io/2010/07/java-operator.html</link>
      <pubDate>Wed, 28 Jul 2010 03:45:53 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/07/java-operator.html</guid>
      <description>1.只可将AND，OR 或NOT 应用于布尔值。与在C 及C++中不同，不可将一个非布尔值当作布尔值在逻辑表达式中使用。 2.在AND（&amp;amp;&amp;</description>
    </item>
    
    <item>
      <title>java变量的作用域</title>
      <link>https://fatkun.github.io/2010/07/the-scope-of-variables.html</link>
      <pubDate>Tue, 27 Jul 2010 06:37:38 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/07/the-scope-of-variables.html</guid>
      <description>public class OneClass { static int x;//会赋值默认值0 public static void main(String[] args){ //int x = 2; //不能在同一个方法内定义同一个变量，不然会报错 Duplicate local variable x System.out.print</description>
    </item>
    
    <item>
      <title>Java的主要类型及它们的取值范围</title>
      <link>https://fatkun.github.io/2010/07/java-data-type.html</link>
      <pubDate>Mon, 26 Jul 2010 17:11:29 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/07/java-data-type.html</guid>
      <description>Java的主要类型 主类型 默认值 大小（位） 最小值 最大值 封装器类型 boolean false 1 &amp;#8211; &amp;#8211; Boolean char &amp;#8216;\u0000&amp;#8242;(null) 16 Unicode 0 Unicode 2^16-1 Character byte (byte)0 8 -128 127 Byte short (short)0 16 -2^15 +2^15-1 Short int 32 -2^31 +2^31-1 Integer long 0L 64 -2^63 -2^63-1 Long float 0.0f</description>
    </item>
    
    <item>
      <title>重新学习Java基础</title>
      <link>https://fatkun.github.io/2010/07/learning-java.html</link>
      <pubDate>Mon, 26 Jul 2010 03:18:18 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/07/learning-java.html</guid>
      <description>&lt;p&gt;想要重新学习Java基础，因为基础实在是太差了，很多概念都搞不清楚，而笔试题中大部分是基础题，加强基础还是很有必要的，苦于没有学习的条目，所以上网搜索到下面的文章，吓死我了，这位同学看了N本书，应该还写了N多的读书笔记~哎，学习没有捷径，唯有苦功夫。大概按照这来看着，看来我要买本《Thinking in Java》，看电子书不太舒服。
以下原文地址：&lt;a href=&#34;http://hi.baidu.com/guoerguoerguoer/blog/item/326f275117822568853524c0.html&#34;&gt;学习java的步骤和一些必看的书籍&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用json-lib遍历数组与对象（JSONArray与JSONObject）</title>
      <link>https://fatkun.github.io/2010/07/jsonarray-jsonobject-array.html</link>
      <pubDate>Sun, 18 Jul 2010 06:55:31 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/07/jsonarray-jsonobject-array.html</guid>
      <description>使用json-lib遍历数组与对象 //遍历json数组 String json1 = &#34;{data:[{name:&#39;Wallace&#39;},{name:&#39;Grommit&#39;}]}&#34;; jsonObjSplit = new JSONObject(json1); JSONArray ja = jsonObjSplit.getJSONArray(&#34;data&#34;); for (int i = 0; i &amp;lt; ja.length(); i++) { JSONObject jo = (JSONObject) ja.get(i); System.out.println(jo.get(&#34;name&#34;)); } //JSONObject遍历</description>
    </item>
    
    <item>
      <title>使用cookie获取QQ头像（JSP版）</title>
      <link>https://fatkun.github.io/2010/07/get-qq-avatar-with-cookie.html</link>
      <pubDate>Sun, 11 Jul 2010 16:21:00 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/07/get-qq-avatar-with-cookie.html</guid>
      <description>由于腾讯现在QQ头像必须要登录才能看到原头像，所以以前直接获取头像已经失效了（如这篇文章获取QQ头像地址），既然直接获取不行，那来个曲线救国</description>
    </item>
    
    <item>
      <title>免费JSP空间-JHost邀请码(2011更新)</title>
      <link>https://fatkun.github.io/2010/07/free-jsp-host-of-jhost-cn.html</link>
      <pubDate>Fri, 09 Jul 2010 04:28:15 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/07/free-jsp-host-of-jhost-cn.html</guid>
      <description>最新JHOST邀请码：20110228120512_459048，有效期至2011-02-28 12:05:12。 无论在国内和国外，免费的JS</description>
    </item>
    
    <item>
      <title>Struts2校验框架(validation)</title>
      <link>https://fatkun.github.io/2010/07/struts2-validation.html</link>
      <pubDate>Wed, 07 Jul 2010 07:16:39 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/07/struts2-validation.html</guid>
      <description>&lt;p&gt;Struts2的校验方法也是挺常用的，找到了一篇挺全面的文章,主要包括以下内容：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用Annotation（注解）进行校验&lt;/li&gt;
&lt;li&gt;使用xml配置校验&lt;/li&gt;
&lt;li&gt;使用覆盖validate方法校验
文章出处：&lt;a href=&#34;http://blog.csdn.net/struts2/archive/2007/08/02/1721989.aspx&#34;&gt;http://blog.csdn.net/struts2/archive/2007/08/02/1721989.aspx&lt;/a&gt; 作者:马召&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>使用JavaBean操作数据库的例子(JSP)</title>
      <link>https://fatkun.github.io/2010/07/javabean-database.html</link>
      <pubDate>Sat, 03 Jul 2010 06:58:23 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/07/javabean-database.html</guid>
      <description>这个只是一个登陆的 页面，只做了查询和增加。非常简洁，适合新手。 1.使用前先创建一个数据库，然后用“查询”，用记事本打开user.sql内容，</description>
    </item>
    
    <item>
      <title>Eclipse3.6正式版的下载地址</title>
      <link>https://fatkun.github.io/2010/06/eclipse3-6-download.html</link>
      <pubDate>Thu, 24 Jun 2010 05:27:50 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/06/eclipse3-6-download.html</guid>
      <description>Eclipse3.6正式版官方的下载地址还没有放出，不过捐赠Eclipse就可以成为Friends，可以提前从官网下载到3.6正式版。。。其</description>
    </item>
    
    <item>
      <title>Android下拉列表(Spinner)例子</title>
      <link>https://fatkun.github.io/2010/06/android-spinner.html</link>
      <pubDate>Tue, 15 Jun 2010 11:32:06 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/06/android-spinner.html</guid>
      <description>下拉列表(Spinner)的例子，首先要在layout中拖放一个Spinner，例子中的ID为Spinner01 &amp;lt;Spinner android:layout_height=&#34;wrap_content&#34; android:layout_width=&#34;wrap_content&#34; android:layout_y=&#34;132dip&#34; android:layout_x=&#34;97dip&#34; android:id=&#34;@+id/Spinner01&#34;&amp;gt;&amp;lt;/Spinner&amp;gt; 代码： /* Arra</description>
    </item>
    
    <item>
      <title>Android-AlertDialog(警告窗口)例子</title>
      <link>https://fatkun.github.io/2010/06/android-alertdialog.html</link>
      <pubDate>Tue, 15 Jun 2010 11:14:29 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/06/android-alertdialog.html</guid>
      <description>Android-AlertDialog(警告窗口)的一个例子 {.flickr-image.alignnone} new AlertDialog.Builder(TestActivity.this)//Context .setTitle(&#34;标题啊&#34;) .setIcon(android.R.dr</description>
    </item>
    
    <item>
      <title>GAE-使用cron计划任务(java)时无法上传cron.xml，500错误</title>
      <link>https://fatkun.github.io/2010/05/google-app-engine-java-cron.html</link>
      <pubDate>Tue, 11 May 2010 11:50:22 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/05/google-app-engine-java-cron.html</guid>
      <description>错误信息 com.google.appengine.tools.admin.AdminException: Unable to update app: Error posting to URL: https://appengine.google.com/api/datastore/cron/update?app_id=fatkuns&amp;amp;version=4&amp;amp; 500 Internal Server Error Server Error (500) A server error has occurred. at com.google.appengine.tools.admin.AppAdminImpl.update(AppAdminImpl.java:62) at com.google.appengine.eclipse.core.proxy.AppEngineBridgeImpl.deploy(AppEngineBridgeImpl.java:271) at com.google.appengine.eclipse.core.deploy.DeployProjectJob.runInWorkspace(DeployProjectJob.java:145) at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:38) at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55) Caused by: java.io.IOException: Error posting to URL: https://appengine.google.com/api/datastore/cron/update?app_id=fatkuns&amp;amp;version=4&amp;amp; 500 Internal Server Error Server Error (500) A server error has occurred. at com.google.appengine.tools.admin.ServerConnection.send(ServerConnection.java:149) at com.google.appengine.tools.admin.ServerConnection.post(ServerConnection.java:82) at com.google.appengine.tools.admin.AppVersionUpload.send(AppVersionUpload.java:559) at com.google.appengine.tools.admin.AppVersionUpload.updateCron(AppVersionUpload.java:260) at com.google.appengine.tools.admin.AppVersionUpload.doUpload(AppVersionUpload.java:133) at com.google.appengine.tools.admin.AppAdminImpl.update(AppAdminImpl.java:56) … 4</description>
    </item>
    
    <item>
      <title>jsp getOutputStream() has already been called for this response异常解决方法</title>
      <link>https://fatkun.github.io/2010/04/jsp-getoutputstream-has-already-been-called-for-this-response.html</link>
      <pubDate>Sun, 25 Apr 2010 13:01:06 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/04/jsp-getoutputstream-has-already-been-called-for-this-response.html</guid>
      <description>添加以下两段代码即可，我是在用jsp输出图像的时候出现这个问题 out.clear(); out = pageContext.pushBody(); 附上我的输出图像的JSP代码 &amp;lt;%@ page info=&#34;Random Image Show&#34; pageEncoding=&#34;UTF-8&#34; contentType=&#34;image/jpg&#34; autoFlush=&#34;true&#34; buffer=&#34;16kb&#34; session=&#34;false&#34; import=&#34;java.io.FileInputStream&#34;% &amp;lt;% ServletOutputStream sos = null; if (sos == null) sos</description>
    </item>
    
    <item>
      <title>java.lang.IllegalArgumentException: Cannot convert value of type [$Proxy0[解决方法]</title>
      <link>https://fatkun.github.io/2010/03/java-lang-illegalargumentexception-cannot-convert-value-of-type.html</link>
      <pubDate>Sat, 27 Mar 2010 16:35:20 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/03/java-lang-illegalargumentexception-cannot-convert-value-of-type.html</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Caused by: java.lang.IllegalArgumentException: Cannot convert value of type [$Proxy0 implementing com.mysoft.applications.database.interfaces.MyInterface,org.springframework.aop.SpringProxy,org.springframework.aop.framework.Advised] to required type [ibatis.ibator.services.TestService] for property ‘service’: no matching editors or conversion strategy found&lt;br&gt;
at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:231)&lt;br&gt;
at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:138)&lt;br&gt;
at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:386)&lt;br&gt;
… 42 more
在配置事务时加入了aspectjweaver.jar这个包后出现了这个问题。
本文来源：&lt;a href=&#34;http://blog.csdn.net/taochenpfj/archive/2009/07/29/4390158.aspx&#34;&gt;http://blog.csdn.net/taochenpfj/archive/2009/07/29/4390158.aspx&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>错误:The type javax.servlet.ServletContext cannot be resolved</title>
      <link>https://fatkun.github.io/2010/03/%E9%94%99%E8%AF%AFthe-type-javax-servlet-servletcontext-cannot-be-resolved.html</link>
      <pubDate>Fri, 19 Mar 2010 12:08:56 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/03/%E9%94%99%E8%AF%AFthe-type-javax-servlet-servletcontext-cannot-be-resolved.html</guid>
      <description>碰到这个错误，原来是tomcat里的包没有加入Build Path，我把servlet-api.jar加入jdk1.6.0\jre\lib\e</description>
    </item>
    
    <item>
      <title>GAE-Google App Engine网址抓取(java.net.UrlConnection)</title>
      <link>https://fatkun.github.io/2010/01/get-website-source-using-google-app-engine.html</link>
      <pubDate>Sat, 23 Jan 2010 08:17:12 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2010/01/get-website-source-using-google-app-engine.html</guid>
      <description>&lt;p&gt;Google App Engine 的网址抓取挺方便的，可以使用java.net.UrlConnection这个类。有了这个我们可以干什么？例如可以从某处获取天气信息等等~&lt;br&gt;
&lt;img src=&#34;http://farm3.static.flickr.com/2724/4297317270_500f2c34b3.jpg&#34; alt=&#34;&#34;&gt;&lt;br&gt;
(提醒一下，上面的是图片。。不要误点了啊。。。)&lt;br&gt;
看看例子：&lt;a href=&#34;http://2.latest.fatkuns.appspot.com/&#34;&gt;http://2.latest.fatkuns.appspot.com/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>开始学习Google App Engine(Java) – 准备篇</title>
      <link>https://fatkun.github.io/2009/12/the-first-of-google-app-engine-java.html</link>
      <pubDate>Tue, 15 Dec 2009 12:40:01 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2009/12/the-first-of-google-app-engine-java.html</guid>
      <description>&lt;p&gt;发现我挺喜欢Google的东西&lt;del&gt;也算一个G粉吧&lt;/del&gt;&lt;del&gt;好喜欢啊好喜欢·~好多免费的东西&lt;/del&gt;~&lt;/p&gt;
&lt;h2 id=&#34;什么是google-app-engine&#34;&gt;什么是Google App Engine?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;按我的理解，简单的一句话就是Google提供一个网络平台，这个平台目前支持 Python、Java，我们可以通过编写程序运行在google的服务器上。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>JSP实验二-JSP从Request获取值</title>
      <link>https://fatkun.github.io/2009/10/jsp%E5%AE%9E%E9%AA%8C%E4%BA%8C-jsp%E4%BB%8Erequest%E8%8E%B7%E5%8F%96%E5%80%BC.html</link>
      <pubDate>Sat, 10 Oct 2009 04:18:48 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2009/10/jsp%E5%AE%9E%E9%AA%8C%E4%BA%8C-jsp%E4%BB%8Erequest%E8%8E%B7%E5%8F%96%E5%80%BC.html</guid>
      <description>&lt;p&gt;把这两个文件放入服务器的目录里就可以了，忘记放哪里了？没关系，看这里&lt;a href=&#34;http://blog.fatkun.com/view.asp?id=16&#34; target=&#34;_blank&#34;&gt;JBOSS把网页文件放入哪里&lt;/a&gt;&lt;br&gt;
注意这句代码“request.setCharacterEncoding(“GBK”);”不然会导致接收过来的乱码的&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Struts2.x框架的知识点</title>
      <link>https://fatkun.github.io/2009/10/struts2-x%E6%A1%86%E6%9E%B6%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9.html</link>
      <pubDate>Fri, 09 Oct 2009 05:27:17 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2009/10/struts2-x%E6%A1%86%E6%9E%B6%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9.html</guid>
      <description>&lt;p&gt;郁闷，从10月5日开始四天不能上网，杯具了。。。。不能上网就不上呗&lt;del&gt;反正上的是寂寞&lt;/del&gt;今天终于可以上网了。。发泄一下，可恶的校园网！~&lt;br&gt;
不过在不能上网的几天内把Struts2的视频看完了·~哇咔咔。。不过还没练习~~可能很多还不会·&lt;br&gt;
不说郁闷的事了，把知识点列出来先，以后一点点的把例子弄出来。&lt;br&gt;
1，最最最常用的就是那个配置文件啦。。&lt;strong&gt;Struts.xml&lt;/strong&gt;&lt;br&gt;
1）Packa&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JBOSS把网页文件放入哪里才能在浏览器浏览？</title>
      <link>https://fatkun.github.io/2009/09/jboss%E6%8A%8A%E7%BD%91%E9%A1%B5%E6%96%87%E4%BB%B6%E6%94%BE%E5%85%A5%E5%93%AA%E9%87%8C%E6%89%8D%E8%83%BD%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B5%8F%E8%A7%88.html</link>
      <pubDate>Mon, 21 Sep 2009 17:40:43 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2009/09/jboss%E6%8A%8A%E7%BD%91%E9%A1%B5%E6%96%87%E4%BB%B6%E6%94%BE%E5%85%A5%E5%93%AA%E9%87%8C%E6%89%8D%E8%83%BD%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B5%8F%E8%A7%88.html</guid>
      <description>&lt;p&gt;&lt;img onload=&#34;ResizeImage(this,620)&#34; src=&#34;http://fatkun.com/upload/2009/9/xxxx.jpg&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;br&gt;
如果使用EclipseJee等工具的就不会有这个疑问了，IDE会自动帮你放到某个目录下面。&lt;br&gt;
那到底文件要放在哪里呢？&lt;br&gt;
答案就是在JBOSS所在目录\server\default\deploy下，新建一个文件夹xxxx.war（xxxx可以为任意字母，区分大小写，从浏览器访问也是这个名字）在里面放入你的网页文件。&lt;br&gt;
我写一个最简单的网页测试一下&lt;br&gt;
index.jsp&lt;/p&gt;
&lt;pre class=&#34;java&#34;&gt;&amp;lt;%
out.println(&#34;Hello,Fatkun!&#34;);
%&gt;
&lt;/pre&gt;
&lt;p&gt;把index.jsp放入xxxx.war文件夹内，启动JBOSS（如果原先开了的话先关了再开），等一会儿，再启动浏览器访问：http://localhost:8080/xxxx/index.jsp&lt;br&gt;
…&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【基础教程】JBOSS4的安装与测试</title>
      <link>https://fatkun.github.io/2009/09/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8Bjboss4%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E6%B5%8B%E8%AF%95.html</link>
      <pubDate>Mon, 21 Sep 2009 17:19:56 +0000</pubDate>
      
      <guid>https://fatkun.github.io/2009/09/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8Bjboss4%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E6%B5%8B%E8%AF%95.html</guid>
      <description>&lt;p&gt;&lt;img onload=&#34;ResizeImage(this,620)&#34; src=&#34;http://fatkun.com/upload/2009/9/200909211001011467.jpg&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;br&gt;
准备软件：&lt;br&gt;
JBoss-4.2.3.GA：http://sourceforge.net/projects/jboss/&lt;br&gt;
&lt;a href=&#34;http://sourceforge.net/projects/jboss/files/JBoss/JBoss-4.2.3.GA/jboss-4.2.3.GA.zip/download&#34; target=&#34;_blank&#34;&gt;点我下载吧&lt;/a&gt;&lt;br&gt;
JDK1.6：http://java.sun.com/javase/downloads/找到JDK6下载&lt;br&gt;
如果本来已经安装JDK1.6了就不用再下载安装了。（注意：JBoss-4.2.3与JDK依赖，&lt;font color=&#34;Red&#34;&gt;请尽量使用JDK1.6版&lt;/font&gt;，其他版本JDK我没测试过）&lt;br&gt;
…&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>